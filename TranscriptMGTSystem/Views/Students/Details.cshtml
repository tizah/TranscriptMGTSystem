@*@model TranscriptModels.Student*@
@model TranscriptMGTSystem.ViewModels.StudentTranscriptViewModel

@{
    ViewBag.Title = "Details";
}
<style>
    /* Start by setting display:none to make this hidden.
   Then we position it in relation to the viewport window
   with position:fixed. Width, height, top and left speak
   for themselves. Background we set to 80% white with
   our animation centered, and no-repeating */
    .modal {
        display: none;
        position: fixed;
        z-index: 1000;
        top: 0;
        left: 0;
        height: 100%;
        width: 100%;
        background: rgba( 255, 255, 255, .8 ) url('http://i.stack.imgur.com/FhHRx.gif') 50% 50% no-repeat;
    }

    /* When the body has the loading class, we turn
   the scrollbar off with overflow:hidden */
    body.loading .modal {
        overflow: hidden;
    }

    /* Anytime the body has the loading class, our
   modal element will be visible */
    body.loading .modal {
        display: block;
    }
</style>


<section id="content" class="row">
    <div class="col-md-6">

        <hr />
   
        @*<button id="cmd">Generate PDF</button>*@
        @*<input type="button" onclick="printInvoice()" class="btn btn-success" value="Generate PDF" />*@
        @*<dl class="dl-horizontal">
            <dt>
                @Html.DisplayNameFor(model => model.Student.MatricNo)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.Student.MatricNo)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.Student.FirstName)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.Student.FirstName)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.Student.OtherNames)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.Student.OtherNames)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.Student.LastName)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.Student.LastName)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.Student.Email)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.Student.Email)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.Student.DeptName)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.Student.DeptName)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.Student.FacultyName)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.Student.FacultyName)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.Student.Gender)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.Student.Gender)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.Student.ModeOfAdmission)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.Student.ModeOfAdmission)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.Student.Nationality)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.Student.Nationality)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.Student.DateOfBirth)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.Student.DateOfBirth)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.Student.YearOfAttendance)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.Student.YearOfAttendance)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.Student.DegreeAwared)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.Student.DegreeAwared)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.Student.YearOfAward)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.Student.YearOfAward)
            </dd>

        </dl>*@
        <div class="alert alert-info alert-dismissible">
            @*<a href="#" class="close" data-dismiss="alert" aria-label="close">&times;</a>*@
            <strong>Enter</strong> an Email address to send the Transcript.
        </div>

        <form enctype="multipart/form-data" method="post" name="fileinfo">
            <div class="">
                <div class="input-group input-group-lg">
                    <span class="input-group-addon" id="sizing-addon1"><i class="glyphicon glyphicon-envelope"></i></span>
                    <input type="text" class="form-control" placeholder="Email" aria-describedby="sizing-addon1" id="email">
                </div>
                <br />
                <div class="input-group input-group-lg">
                    <span class="input-group-addon" id="sizing-addon1"><i class="glyphicon glyphicon-asterisk"></i></span>
                    <textarea type="text" class="form-control" placeholder="Subject" aria-describedby="sizing-addon1" id="subject"></textarea>
                </div>
                <div class="input-group input-group-lg">
                    <span class="input-group-addon" id="sizing-addon1"><i class="glyphicon glyphicon-file"></i></span>
                    <input type="file" class="form-control" placeholder="Transcript Upload" aria-describedby="sizing-addon1" id="fileUpload" name="attachment">
                </div>
                <br />
                <input type="button" onclick="sendEmail()" value="Send Email" class="btn btn-primary">
            </div>
            </form>
    </div>
    <div >
    @Html.Partial("TranscriptTemplate") 
        </div>

    @*<div class="col-md-6">
        <div class="row">
            <div class="col-md-12">
                <div class="panel">
                    <div class="panel-body">
                        <h3 class="title-hero"></h3>
                        <div class="example-box-wrapper">
                            <table style="width:100%" class="table">
                                <thead>
                                    <tr>
                                        <th>Course Code</th>
                                        <th>Course Title</th>
                                        <th>Credit Unit</th>
                                        <th>Grade</th>
                                        <th>Cummulative GPA</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var session in Model.Cgpas.Distinct().ToList())
                                    {
                                        <h3> Session @session.Session</h3>
                                        foreach (var grade in Model.Courses)
                                        {

                                            <tr>
                                                <td>@grade.Course.CourseCode</td>
                                                <td>@grade.Course.CourseName</td>
                                                <td>@grade.Course.CreditUint</td>
                                                <td>
                                                    @grade.GradeName
                                                </td>
                                                <td>
                                                    @foreach (var cgpa in grade.Student.Results.Where(x => x.StudentId.Equals(grade.StudentId)))
                                                    {
                                                        @cgpa.CummulativeGradePointAverage
                                                    }
                                                </td>
                                            </tr>

                                        }
                                    }

                                </tbody>

                            </table>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>*@
</section>
<p>
    @Html.ActionLink("Edit", "Edit", new { id = Model.Student.StudentId }) |
    @Html.ActionLink("Back to List", "Index")
</p>
<div class="modal"><!-- Place at bottom of page --></div>
<script src="~/Scripts/jquery-3.3.1.min.js"></script>
<script src="https://code.jquery.com/jquery-1.12.4.min.js" integrity="sha256-ZosEbRLbNQzLpnKIkEdrPv7lOy9C27hHQ+Xp8a4MxAQ=" crossorigin="anonymous"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf/1.3.5/jspdf.min.js"></script>
<script type="text/javascript">


    //FormData attachment = new FormData();
    //var file = $("#fileUpload").val();
    //aler(file);



    function generatePDF() {
        //$('#TranscriptTemplate').print();
        var prtContent = document.getElementById("TranscriptTemplate");
        var WinPrint = window.open('', '', 'left=0,top=0,width=800,height=900,toolbar=0,scrollbars=0,status=0');
        WinPrint.document.write(prtContent.innerHTML);
        WinPrint.document.close();
        WinPrint.focus();
        WinPrint.print();
        WinPrint.close();
    }

    //$body = $("body");

    //$(document).on({
    //    ajaxStart: function () { $body.addClass("loading"); },
    //    ajaxStop: function () { $body.removeClass("loading"); }
    //});

    var sendEmail = function () {
        var email = $("#email").val();
        var subject = $("#subject").val();
        var doc;
        var file = $('#fileUpload')[0].files[0];
        //$.each($("#fileUpload"), function () {
        //    doc = this.files;
        //});
        //var obj = { myemail: email, mysubject: subject, file:doc };

        var formData = new FormData();
        formData.append('myemail', email);
        formData.append('mysubject', subject);
        formData.append('myfile', $('input[type=file]')[0].files[0]);
        // alert(JSON.stringify(obj));
        console.log(formData);
        $.ajax({
            type: "post",
            url: "/students/sendmailtouser",
            contentType: false, 
            processData: false,
            data: formData,
            ajaxStart: function () { $body.addClass("loading"); },
            ajaxStop: function () { $body.removeClass("loading"); },
         
            datatype: "json",

            success: function (data) {
                if (data != null) {
                    alert("email : " + data.email + ", subject : " + data.subject);
                }
                else {
                    alert("something went wrong");
                }
            },
            failure: function (data) {
                alert(data.responsetext);
            },
            error: function (data) {
                alert(data.responsetext);
            }

        });
    }


    var doc = new jsPdf();

    $('#cmd').click(function () {
        alert(doc);
        //doc.fromHTML($('#content').html(), 15, 15, {
        //    'width': 170,
        //    'elementHandlers': specialElementHandlers
        //});
        //doc.save('sample-file.pdf');
    });
</script>